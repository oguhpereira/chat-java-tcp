package chattcp;

import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import static java.lang.System.in;
import java.net.Socket;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author gustavo
 */
public class Chat extends javax.swing.JFrame {

    /**
     * Creates new form ChatServidor
     */
    private Socket socketChat;
    private Socket socketAnexo;
    private DataOutputStream saida;
    private DataInputStream entrada;
    private DataOutputStream saidaAnexo;
    private DataInputStream entradaAnexo;
    private ObjectOutputStream objectOutput;
    private ObjectInputStream objectInput;
    private FileOutputStream fileOutput;
    private BufferedInputStream fileInput;
    private String mensagem = "";
    private String type = "";
       
    
    public Chat(){
        initComponents();
    }
    
    public Chat(Socket socketChat,Socket socketAnexo, String type) {
        initComponents();

        jLabelType.setText(type);
        this.type = type;
        try{
            this.socketChat = socketChat;
            this.socketAnexo = socketAnexo;
            saida = new DataOutputStream(this.socketChat.getOutputStream());
            entrada = new DataInputStream(this.socketChat.getInputStream());
            saidaAnexo = new DataOutputStream((this.socketAnexo.getOutputStream()));
            entradaAnexo = new DataInputStream((this.socketAnexo.getInputStream()));
            objectOutput = new ObjectOutputStream(this.socketAnexo.getOutputStream());
            objectInput = new ObjectInputStream(this.socketAnexo.getInputStream());
            new Thread(){
                public void run() {
                    try {
                        while(true){
                            mensagem = "\nMensagem Recebida ["+LocalDate.now().toString()+"]:\n> " + entrada.readUTF() + "\n";
                            jTextAreaRecebida.append(mensagem);
                        }
                    } catch (IOException ex) {
                        System.out.println("Erro ao enviar/receber stream "+ ex.getMessage());
                    }
                }
            }.start();
            new Thread() {
                int bytesRead;
                int current = 0;
                public void run() {
                    try {
                        while(true){
                            String fileName = entradaAnexo.readUTF();
                            System.out.println(fileName);
                            OutputStream output = new FileOutputStream("anexos/"+fileName);
                            long size = entradaAnexo.readLong();
                            byte[] buffer = new byte[1024];   
                            while (size > 0 && (bytesRead = entradaAnexo.read(buffer, 0, (int)Math.min(buffer.length, size))) != -1)   
                            {   
                                output.write(buffer, 0, bytesRead);   
                                size -= bytesRead;   
                            }
                            JOptionPane.showMessageDialog(null,"Voce recebeu um novo arquivo arquivo");
                            System.out.println("RECEBIDO");
                            output.close();
                        }
                    } catch (IOException ex){
                        System.out.println("Erro ao enviar/receber arquivo "+ ex.getMessage());
                    }
                }
            }.start();
        } catch(IOException error){
            System.out.println("Erro ao enviar/receber stream "+ error.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPaneMensagem = new javax.swing.JTextPane();
        jButtonSend = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelType = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaRecebida = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jButtonAnexo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TCP - CHAT");
        setBackground(java.awt.SystemColor.controlDkShadow);
        setResizable(false);

        jScrollPane1.setViewportView(jTextPaneMensagem);

        jButtonSend.setText("Enviar");
        jButtonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel1.setText("Digite uma Mensagem:");

        jLabelType.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabelType.setText("Servi√ßo");

        jTextAreaRecebida.setEditable(false);
        jTextAreaRecebida.setColumns(20);
        jTextAreaRecebida.setRows(5);
        jScrollPane2.setViewportView(jTextAreaRecebida);

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel2.setText("Mensagens Recebidas");

        jButtonAnexo.setText("Anexo");
        jButtonAnexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnexoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(212, 212, 212)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonSend, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                    .addComponent(jButtonAnexo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(jLabelType)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonAnexo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonSend, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(40, 40, 40))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendActionPerformed
        try {
            String mensageTextArea = jTextPaneMensagem.getText();
            if(!mensageTextArea.isEmpty()){
                mensagem = "\nMensagem Enviada pelo "+this.type+" ["+LocalDate.now().toString()+"]:\n> " + jTextPaneMensagem.getText() +"\n";
                saida.writeUTF(jTextPaneMensagem.getText());
                jTextPaneMensagem.setText("");
                jTextAreaRecebida.append(mensagem); 
            }
        } catch (IOException ex) {
            System.out.println("Erro ao enviar/receber stream "+ ex.getMessage());
        }
    }//GEN-LAST:event_jButtonSendActionPerformed
    private void helper(){
        
    }
    
    private void jButtonAnexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnexoActionPerformed
        JFileChooser file = new JFileChooser(); 
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int i= file.showSaveDialog(null);
        if (i==1){
            System.out.println("Cancelado");
        } else {
            File arquivo = file.getSelectedFile();
            System.out.println("Enviado");
            try {
                byte[] mybytearray = new byte[(int) arquivo.length()];
                FileInputStream fis = new FileInputStream(arquivo);
                BufferedInputStream bis = new BufferedInputStream(fis);
                bis.read(mybytearray, 0, mybytearray.length);
                saidaAnexo.writeUTF(arquivo.getName());     
                saidaAnexo.writeLong(mybytearray.length);     
                saidaAnexo.write(mybytearray, 0, mybytearray.length);     
                saidaAnexo.flush();
            } catch (IOException ex) {
                Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonAnexoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnexo;
    private javax.swing.JButton jButtonSend;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextAreaRecebida;
    private javax.swing.JTextPane jTextPaneMensagem;
    // End of variables declaration//GEN-END:variables
}
